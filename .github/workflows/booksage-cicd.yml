name: BookSage Build

permissions:
  contents: write
  packages: write

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-executable:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller

      - name: Create database if needed
        run: |
          if (-Not (Test-Path "database.db")) {
            echo "Creating empty database.db file"
            python -c "import sqlite3; conn = sqlite3.connect('database.db'); conn.close()"
          }

      - name: Create PyInstaller wrapper
        run: |
          @"
          import os
          import sys
          
          def resource_path(relative_path):
              try:
                  base_path = sys._MEIPASS
              except Exception:
                  base_path = os.path.abspath(".")
              return os.path.join(base_path, relative_path)
          
          import app
          
          app.app.template_folder = resource_path('templates')
          app.app.static_folder = resource_path('static')
          
          if __name__ == "__main__":
              app.app.run(debug=False)
          "@ | Out-File -FilePath app_wrapper.py -Encoding utf8

      - name: Create PyInstaller executable
        run: |
          pyinstaller --onedir `
            --add-data "templates;templates" `
            --add-data "static;static" `
            --add-data "database.db;." `
            --hidden-import=flask `
            --hidden-import=jinja2 `
            app_wrapper.py `
            --name BookSage

      - name: Package application
        run: |
          Compress-Archive -Path "dist/BookSage/*" -DestinationPath "BookSage_App.zip" -Force

      - name: Create GitHub Release
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: "BookSage Release v${{ github.run_number }}"
          draft: false
          prerelease: false
          files: BookSage_App.zip