name: BookSage CI/CD Pipeline

# Add permissions at the top level
permissions:
  contents: write
  packages: write

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  validate-code:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures full Git history is available
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || echo "No requirements.txt found"
          pip install flake8 pytest pytest-flask
      
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  validate-templates:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flask jinja2 beautifulsoup4
      
      - name: Validate HTML templates
        run: python scripts/validate_html.py  # Move validation logic to a script

  build:
    needs: [validate-code, validate-templates]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || echo "No requirements.txt found"
      
      - name: Create deployment package
        run: |
          mkdir -p deployment
          cp -r templates deployment/ || echo "No templates directory found"
          cp -r static deployment/ || mkdir -p deployment/static
          cp *.py deployment/ || echo "No Python files found at root"
          if [ -f requirements.txt ]; then cp requirements.txt deployment/; fi
          cd deployment && zip -r ../booksage-app.zip .
      
      - name: Upload deployment package
        uses: actions/upload-artifact@v4
        with:
          name: booksage-app
          path: booksage-app.zip

  create-executable:
    needs: build
    runs-on: windows-latest  
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: booksage-app
          path: .
      
      - name: Extract build files
        run: Expand-Archive -Path booksage-app.zip -DestinationPath extracted
      
      - name: Install dependencies and PyInstaller
        run: |
          cd extracted
          python -m pip install --upgrade pip
          pip install -r requirements.txt || echo "No requirements.txt found"
          pip install pyinstaller
      
      - name: Create executable
        run: |
          cd extracted
          pyinstaller --onefile --name booksage run_booksage.py
      
      - name: Package executable
        run: |
          cd extracted/dist
          Compress-Archive -Path "booksage.exe" -DestinationPath "../../BookSage_App.zip"
      
      - name: Upload executable package
        uses: actions/upload-artifact@v4
        with:
          name: booksage-executable
          path: BookSage_App.zip

  create-release:
    needs: [build, create-executable]
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Download App Zip
        uses: actions/download-artifact@v4
        with:
          name: booksage-app
          path: .
      
      - name: Download Executable Zip
        uses: actions/download-artifact@v4
        with:
          name: booksage-executable
          path: .
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ github.run_number }}
          name: Release ${{ github.run_number }}
          files: |
            booksage-app.zip
            BookSage_App.zip
