name: BookSage CI/CD Pipeline

permissions:
  contents: write
  packages: write

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  validate-code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags
          token: ${{ secrets.GITHUB_TOKEN }}  # Use GitHub token for authentication

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt flake8 pytest pytest-flask

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  validate-templates:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags
          token: ${{ secrets.GITHUB_TOKEN }}  # Use GitHub token for authentication

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install flask jinja2 beautifulsoup4

      - name: Validate HTML templates
        run: |
          if [ -f scripts/validate_html.py ]; then
            python scripts/validate_html.py
          else
            echo "WARNING: scripts/validate_html.py not found! Skipping..."
          fi

  build:
    needs: [validate-code, validate-templates]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags
          token: ${{ secrets.GITHUB_TOKEN }}  # Use GitHub token for authentication

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Create deployment package
        run: |
          mkdir -p deployment
          cp -r templates deployment/ || echo "No templates directory found"
          cp -r static deployment/ || mkdir -p deployment/static
          cp *.py deployment/ || echo "No Python files found at root"
          cp requirements.txt deployment/ || echo "No requirements.txt found"
          cp database.db deployment/ || echo "No database.db found"
          cd deployment && zip -r ../booksage-app.zip .

      - name: Upload deployment package
        uses: actions/upload-artifact@v4
        with:
          name: booksage-app
          path: booksage-app.zip